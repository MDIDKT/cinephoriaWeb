security:
  # Configuration des password hashers
  password_hashers:
    App\Entity\User:
      algorithm: auto
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
      algorithm: auto

  # Chargement des utilisateurs
  providers:
    app_user_provider:
      entity:
        class: App\Entity\User
        property: email

  # Définition des firewalls
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false

    # Configuration du firewall pour l'API avec authentification par token
    api:
      pattern: ^/api/
      stateless: true
      

    main:
      pattern: ^/
      lazy: true
      provider: app_user_provider
      logout:
        path: app_logout

      remember_me:
        # Utilisation de %env(APP_SECRET)% pour la clé secrète au lieu de %kernel.secret%
        secret: '%env(APP_SECRET)%'
        lifetime: 604800
        path: /
        always_remember_me: true

  # Contrôle d'accès
  access_control:
    - { path: ^/admin, roles: ROLE_ADMIN }
    - { path: ^/profile, roles: ROLE_USER }
    - { path: ^/reservations, roles: ROLE_USER }

# Configuration pour l'environnement de test
when@test:
  security:
    password_hashers:
      Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
        algorithm: auto
        cost: 4 # Valeur minimale pour bcrypt
        time_cost: 3 # Valeur minimale pour argon
        memory_cost: 10 # Valeur minimale pour argon
